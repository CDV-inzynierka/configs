name: Deploy NetBox Configurations

on:
  workflow_dispatch:

jobs:
  test:
    name: Debug SSH secrets
    runs-on: ubuntu-latest
    environment: netbox
    steps:
    - name: Print SSH secrets debug info
      run: |
        echo "Host: ${{ secrets.SSH_HOST }}"
        echo "User: ${{ secrets.SSH_USER }}"
        echo "Port: ${{ secrets.SSH_PORT }}"
        echo "Key exists: ${{ secrets.SSH_PRIVATE_KEY != '' }}"
    
  sync-netbox:
    name: Run NetBox Sync Script Remotely
    runs-on: ubuntu-latest
    environment: netbox
    steps:
      - name: SSH & Run NetBox Sync Script
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Przechodzi do katalogu z plikiem Pythona na zdalnym serwerze
            # Upewnij się, że ten katalog istnieje i zawiera conf2.py
            cd /ansible 
            sudo python3 conf2.py

  ansible-deploy:
    name: Ansible Backup & Deploy Remotely
    needs: sync-netbox
    runs-on: ubuntu-latest
    environment: netbox
    steps:
      - name: SSH & Run Ansible Playbook (Backup & Deploy)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # WAŻNE: Zakłada się, że Ansible jest zainstalowany na zdalnym serwerze.
            # Jeśli nie, możesz dodać poniższą linię (odkomentuj):
            # sudo apt update && sudo apt install -y ansible -y
            
            # Przechodzi do katalogu z playbookami na zdalnym serwerze.
            # Upewnij się, że ten katalog zawiera hosts.ini oraz podkatalog playbooks.
            cd /ansible 
            
            # Wyłącza sprawdzanie kluczy hosta Ansible na zdalnym serwerze.
            export ANSIBLE_HOST_KEY_CHECKING="False" 
            
            # Uruchamia playbook Ansible.
            # Flagi --private-key i -u nie są potrzebne, ponieważ komenda jest uruchamiana lokalnie 
            # na zdalnym serwerze przez użytkownika, który zalogował się przez SSH.
            ansible-playbook -i hosts.ini playbooks/deploy_and_backup.yml

  manual-approval:
    name: Manual Approval for Rollback
    needs: ansible-deploy
    runs-on: ubuntu-latest
    environment:
      name: netbox
      # To wymusi ręczną akceptację w interfejsie GitHub przed przejściem do rollbacku.
      # Wymaga skonfigurowania środowiska "netbox" (lub "production") z reviewerami w ustawieniach repozytorium GitHub.
    steps:
      - name: Wait for admin approval
        run: echo "Czekam na ręczną akceptację lub odrzucenie rollbacku..."

  ansible-rollback:
    name: Ansible Rollback (optional) Remotely
    needs: manual-approval
    # Warunek 'if' kontroluje, kiedy ten krok się uruchomi. 
    # Tutaj, uruchomi się tylko dla gałęzi 'main' po ręcznym zatwierdzeniu.
    # Dostosuj warunek 'if' jeśli Twoje środowisko 'netbox' jest czymś innym niż 'production'
    # lub jeśli chcesz inne kryteria uruchomienia.
    if: ${{ github.ref == 'refs/heads/main' && github.environment == 'netbox' }}
    runs-on: ubuntu-latest
    environment: netbox
    steps:
      - name: SSH & Run Ansible Playbook (Rollback)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # WAŻNE: Zakłada się, że Ansible jest zainstalowany na zdalnym serwerze.
            # Jeśli nie, możesz dodać poniższą linię (odkomentuj):
            # sudo apt update && sudo apt install -y ansible -y
            
            # Przechodzi do katalogu z playbookami na zdalnym serwerze.
            cd /ansible 
            
            # Wyłącza sprawdzanie kluczy hosta Ansible na zdalnym serwerze.
            export ANSIBLE_HOST_KEY_CHECKING="False" 
            
            # Uruchamia playbook Ansible.
            ansible-playbook -i hosts.ini playbooks/rollback.yml
